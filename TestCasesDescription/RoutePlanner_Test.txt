Objective- RoutePlanner_Test is a test case which will navigate into Route Planner webpage, Enter a place/address and then set the same as a 
destination and take a screenshot.The test case will run by clicking on Route Planner web link and then enter and set the destination on the Route Planner page.


Description:

* The "RoutePlanner_Test" is using the "RoutePlannerPage", "HomePage" and "LoginPage" Page classes through the Page Object Model using Page Factory
* Objects are created for all page classes and a webdriver instance is passed through the objects
* The Webdriver instance is received by the constructors of both the classes and Pagefactory weblements are initialized by the constructors
* Both the Page classes have a list of weblements and methods to perform actions on those webelements for a successful test execution
* The Page Class objects will invoke methods based on the sequence of the method call written in the "RoutePlanner_Test" Test case

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Steps:

1.The Browser and application is launched by @BeforeTest method "BrowserSetup()"
2.Once the application is launched the proxy pop-up is handled by method "proxy_click()" invoked by LoginPage object "obj4" in the test case
3.Followed by Clicking on "Route Planner" button performed by method "Route_Planner()" invoked by HomePage object "obj_home3" in the test case
4.Followed by Clicking on "Search" button performed by method "Search_box_click()" invoked by RoutePlannerPage object "obj_route" in the test case
5.Followed by sending place/destination name into Search box and pressing Enter button performed by method "Send_Search_Data()" invoked by 
  RoutePlannerPage object "obj_route" in the test case
6.Followed by Clicking on "Set As Destination" button to set the searched destination is performed by method "Destination_click()" invoked 
  by RoutePlannerPage object "obj_route" in the test case
7.A screenshot is captured for the above action.
8.The browser is then closed using @AfterTest method "CloseBrowser()"